{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_input, {\n    modelValue: $data.code,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.code = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"img\", {\n    src: this.imgUrl,\n    style: {\n      \"height\": \"30px\",\n      \"width\": \"80px\",\n      \"cursor\": \"pointer\",\n      \"margin-left\": \"5px\"\n    },\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getCodeImage && $options.getCodeImage(...args))\n  }, null, 8 /* PROPS */, _hoisted_1), _createVNode(_component_el_button, {\n    onClick: $options.yanzhen\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"验证\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_el_input","$data","code","$event","_createElementVNode","src","imgUrl","style","onClick","_cache","args","$options","getCodeImage","_component_el_button","yanzhen"],"sources":["F:\\jkm_website\\src\\views\\testPl.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-input v-model=\"code\"></el-input>\r\n        <img :src=\"this.imgUrl\" style=\"height: 30px; width: 80px;cursor:pointer;margin-left: 5px;\" @click=\"getCodeImage\" />\r\n        <el-button @click=\"yanzhen\">验证</el-button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            imgUrl: \"\",\r\n            code: \"\"\r\n        }\r\n    },\r\n    created() { this.getCodeImage() },\r\n    methods: {\r\n        getCodeImage() {\r\n            this.$http.get('/codeImage', {\r\n                responseType: \"blob\",\r\n            }).then(res => {\r\n                console.log(res.data)\r\n                this.imgUrl = window.URL.createObjectURL(res.data);\r\n            })\r\n        },\r\n        yanzhen() {\r\n            this.$http.get('/imageCode', { params: { imageCode: this.code } }).then(res => { console.log(res) })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style></style>"],"mappings":";;;;;uBACIA,mBAAA,CAIM,cAHFC,YAAA,CAAoCC,mBAAA;gBAAjBC,KAAA,CAAAC,IAAI;+DAAJD,KAAA,CAAAC,IAAI,GAAAC,MAAA;2CACvBC,mBAAA,CAAmH;IAA7GC,GAAG,OAAOC,MAAM;IAAEC,KAAkE,EAAlE;MAAA;MAAA;MAAA;MAAA;IAAA,CAAkE;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;uCAC/GX,YAAA,CAA0Cc,oBAAA;IAA9BL,OAAK,EAAEG,QAAA,CAAAG;EAAO;sBAAE,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}